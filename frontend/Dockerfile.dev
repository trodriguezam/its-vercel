# syntax=docker/dockerfile:1

# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Dockerfile reference guide at
# https://docs.docker.com/go/dockerfile-reference/

# Want to help us make this template better? Share your feedback here: https://forms.gle/ybq9Krt8jtBL3iCk7

# ARG NODE_VERSION=22.7.0

# FROM node:${NODE_VERSION}-alpine
FROM node:22-alpine

# Use production node environment by default.
# ENV NODE_ENV production

# WORKDIR /usr/src/app
WORKDIR /app

# Copiar package.json y package-lock.json (o yarn.lock si usas Yarn)
COPY package*.json ./

# Eliminar node_modules y package-lock.json para asegurar una instalaci√≥n limpia
RUN rm -rf node_modules package-lock.json

# Download dependencies as a separate step to take advantage of Docker's caching.
# Leverage a cache mount to /root/.npm to speed up subsequent builds.
# Leverage a bind mounts to package.json and package-lock.json to avoid having to copy them into
# into this layer.
# RUN --mount=type=bind,source=package.json,target=package.json \
#     --mount=type=bind,source=package-lock.json,target=package-lock.json \
#     --mount=type=cache,target=/root/.npm \
#     npm ci --omit=dev
RUN npm install

# Run the application as a non-root user.
# USER node

# Copy the rest of the source files into the image.
COPY . .

# Expose the port that the application listens on.
EXPOSE 3001

# Run the application.
# CMD npm run dev
CMD ["npm", "run", "dev"]
